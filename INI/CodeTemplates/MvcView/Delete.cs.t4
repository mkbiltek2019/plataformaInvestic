<#@ template language="C#" HostSpecific="True" #>
<#@ output extension=".cshtml" #>
<#@ include file="Imports.include.t4" #>
<#
    string pkName = GetPrimaryKeyName();
#>
@model <#= ViewDataTypeName #>
<#
// The following chained if-statement outputs the file header code and markup for a partial view, a view using a layout page, or a regular view.
if(IsPartialView) {
#>

<#
} else if(IsLayoutPageSelected) {
#>

@{
    ViewBag.Title = "<#= ViewName#>";
    String ctrl=ViewBag.ControllerName;
<#
if (!String.IsNullOrEmpty(LayoutPageFile)) {
#>
    Layout = "<#= LayoutPageFile#>";
<#
}
#>
}

<h2><#= ViewName#></h2>

<#
} else {
#>

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title><#= ViewName #></title>
</head>
<body>
<#
    PushIndent("    ");
}
#>
<br /><br /><br />
<h3>Esta seguro de eliminar esta red?</h3>@Html.ActionLink("Atraz", "Index", null, new { @class = "button large primary" })
<div>
    <h4><#= ViewDataTypeShortName #></h4>
    <hr />
    <dl class="dl-horizontal">
<#
foreach (PropertyMetadata property in ModelMetadata.Properties) {
    if (property.PropertyName=="JsonMetadata") {
          continue;
    }
    if(property.ShortTypeName=="byte[]"){
#>     
        <dt>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </dt>
        <dd>
            <a href="@Url.Action("DowloadFile", new { id = Model.<#=pkName #>, FileId = "<#=property.PropertyName#>" })" target="_blank" class="glyphicon glyphicon-download-alt"></a>
            @*<img src="@Url.Action("DowloadFile", new { id = Model.<#=pkName #>, FileId = "<#=property.PropertyName#>" })" width="100px"/>*@       
        <dd>
<#
            
    }else if (property.Scaffold && !property.IsPrimaryKey && !property.IsForeignKey) {
#>
<#
        // We do not want to show any association properties for which there is
        // no associated foreign key.
        if (property.IsAssociation && GetRelatedModelMetadata(property) == null) {
            continue;
        }
#>
        <dt>
            @Html.DisplayNameFor(model => model.<#= GetValueExpression(property) #>)
        </dt>

        <dd>
            @Html.DisplayFor(model => model.<#= GetValueExpression(property) #>)
        </dd>

<#
    }
}
#>
    </dl>

    @using (Html.BeginForm()) {
        @Html.AntiForgeryToken()

        <div class="form-actions no-color">
            <input type="submit" value="Eliminar" class="button large primary" />            
        </div>
    }
</div>
<#
// The following code closes the tag used in the case of a view using a layout page and the body and html tags in the case of a regular view page
#>
<#
if(!IsPartialView && !IsLayoutPageSelected) {
    ClearIndent();
#>
</body>
</html>
<#
}
#>
<#@ include file="ModelMetadataFunctions.cs.include.t4" #>