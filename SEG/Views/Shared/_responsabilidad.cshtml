@model SEG.Models.DataBase.responsabilidade
@using System.Data.Entity
@using System.Linq
@using SEG.Models.DataBase




@{
    var db = new Entities();
}

<h2>Responsabilidades</h2>

@using (Ajax.BeginForm("Create", "responsa", new AjaxOptions
            {
                InsertionMode = InsertionMode.Replace,
                UpdateTargetId = "Id",
                LoadingElementId = "loader"


            }))
{ 

@Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4></h4>
        <hr />
        @Html.ValidationSummary(true, "", new {@class = "text-danger"})
        @Html.HiddenFor(model => model.Id_Contratista)

        <div class="input-control textarea">
            <label class="control-label col-md-2">Descripcion</label>
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Descripcion, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Descripcion, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Añadir Responsabilidad" class="btn btn-default" />
            </div>
        </div>
    </div>

}
<div id="listareponsabilidades">
    @{
        var currentuser = User.Identity.GetUserId();
        IQueryable<responsabilidade> responsabilidades = db.responsabilidades.Where(r => r.Id_Contratista.Equals(currentUser));
    }
    @Html.Partial("listares", responsabilidades)
</div>
<div>
    @Html.ActionLink("Regresar", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}